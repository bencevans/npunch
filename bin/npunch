#!/usr/bin/env node

var program = require('commander'),
nodepunch = require('../lib/npunch.js'),
fs = require('fs');


// Backwards Compatibility.
fs.existsSync || (fs.existsSync = path.existsSync);


// Check Supported Operating System

if(process.platform !== 'darwin') {
    console.error('n(ode)Punch only supports Darwin/MacOSX due to support from dependencies (Pow).');
    process.exit();
}

// Check required paths exist.

if(!fs.existsSync(nodepunch.powPath)) {
    console.error('Pow doesn\'t appear to be installed to the usual location if at all.');
    process.exit();
}

// Program...

program
    .version(nodepunch.version())

program
    .command('ln <dir>')
    .description('link/add project')
    .action(function(dir){

        //TODO: 'npunch ln .' should work.
        //TODO: 'npunch ln ./afolderthatexists' should work.
        //TODO: 'npunch ln /absoulte/folder/path/that/exists' should work
        //TODO: 'npunch ln ./a/folder/that/doesnt/exist' should fail

        try {
            nodepunch.link(process.cwd());
        } catch(err) {

            if(err.errno == 47)
                console.warn("There's already a project with this name.");
            else
                console.warn('Unknown Error: ' + err);
        }
    });

program
    .command('rm <projectName>')
    .description('link/add project')
    .action(function(projectName){
        console.log('setup');
    });

program
    .command('ls')
    .description('list added projects')
    .action(function(){

        //TODO: Put Output into a pretty table.

        console.log(nodepunch.list());
    });

program
    .command('start <projectName>')
    .description('start a project')
    .action(function(projectName){
        nodepunch.start(process.argv[3]);
    });

program
    .command('stop <projectName>')
    .description('stop a project')
    .action(function(projectName){
        fs.unlinkSync(nodepunchPath + '/' + process.argv[3] );
    });

program
    .command('open <projectName>')
    .description('open the project in browser')
    .action(function(projectName){
        console.log('deploying "%s"', env);
    });

program
    .command('*')
    .action(function(){
        console.log('Unknown Command. Try \'npunch --help\'');
    });

program.parse(process.argv);

